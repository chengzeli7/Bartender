// Generated by view binder compiler. Do not edit!
package com.example.bartender.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bartender.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.chip.Chip;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCocktailDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ImageView cocktailImage;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final Chip difficultyChip;

  @NonNull
  public final FloatingActionButton favoriteFab;

  @NonNull
  public final RecyclerView ingredientsRecyclerView;

  @NonNull
  public final TextView ingredientsTitle;

  @NonNull
  public final TextView instructionsText;

  @NonNull
  public final TextView instructionsTitle;

  @NonNull
  public final Toolbar toolbar;

  private ActivityCocktailDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull ImageView cocktailImage,
      @NonNull CollapsingToolbarLayout collapsingToolbar, @NonNull Chip difficultyChip,
      @NonNull FloatingActionButton favoriteFab, @NonNull RecyclerView ingredientsRecyclerView,
      @NonNull TextView ingredientsTitle, @NonNull TextView instructionsText,
      @NonNull TextView instructionsTitle, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.cocktailImage = cocktailImage;
    this.collapsingToolbar = collapsingToolbar;
    this.difficultyChip = difficultyChip;
    this.favoriteFab = favoriteFab;
    this.ingredientsRecyclerView = ingredientsRecyclerView;
    this.ingredientsTitle = ingredientsTitle;
    this.instructionsText = instructionsText;
    this.instructionsTitle = instructionsTitle;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCocktailDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCocktailDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cocktail_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCocktailDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.cocktailImage;
      ImageView cocktailImage = ViewBindings.findChildViewById(rootView, id);
      if (cocktailImage == null) {
        break missingId;
      }

      id = R.id.collapsingToolbar;
      CollapsingToolbarLayout collapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      id = R.id.difficultyChip;
      Chip difficultyChip = ViewBindings.findChildViewById(rootView, id);
      if (difficultyChip == null) {
        break missingId;
      }

      id = R.id.favoriteFab;
      FloatingActionButton favoriteFab = ViewBindings.findChildViewById(rootView, id);
      if (favoriteFab == null) {
        break missingId;
      }

      id = R.id.ingredientsRecyclerView;
      RecyclerView ingredientsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsRecyclerView == null) {
        break missingId;
      }

      id = R.id.ingredientsTitle;
      TextView ingredientsTitle = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsTitle == null) {
        break missingId;
      }

      id = R.id.instructionsText;
      TextView instructionsText = ViewBindings.findChildViewById(rootView, id);
      if (instructionsText == null) {
        break missingId;
      }

      id = R.id.instructionsTitle;
      TextView instructionsTitle = ViewBindings.findChildViewById(rootView, id);
      if (instructionsTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityCocktailDetailBinding((CoordinatorLayout) rootView, appBarLayout,
          cocktailImage, collapsingToolbar, difficultyChip, favoriteFab, ingredientsRecyclerView,
          ingredientsTitle, instructionsText, instructionsTitle, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
